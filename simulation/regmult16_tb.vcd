$date
	Sun Oct  7 17:58:23 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module regmult16_tb $end
$var wire 16 ! Y [15:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 1 $ clk $end
$var reg 1 % en $end
$var reg 1 & rst $end
$scope module dut $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 16 ) Y [15:0] $end
$var wire 1 * clk $end
$var wire 1 + en $end
$var wire 1 , rst $end
$var reg 8 - A_reg [7:0] $end
$var reg 8 . B_reg [7:0] $end
$scope module multiplier $end
$var wire 8 / A [7:0] $end
$var wire 8 0 B [7:0] $end
$var wire 16 1 Y [15:0] $end
$var wire 15 2 l0 [15:1] $end
$var wire 8 3 l0c [7:0] $end
$var wire 7 4 l0s [6:0] $end
$var wire 8 5 l1 [7:0] $end
$var wire 8 6 l1c [7:0] $end
$var wire 7 7 l1s [6:0] $end
$var wire 8 8 l2 [7:0] $end
$var wire 8 9 l2c [7:0] $end
$var wire 7 : l2s [6:0] $end
$var wire 8 ; l3 [7:0] $end
$var wire 8 < l3c [7:0] $end
$var wire 7 = l3s [6:0] $end
$var wire 8 > l4 [7:0] $end
$var wire 8 ? l4c [7:0] $end
$var wire 7 @ l4s [6:0] $end
$var wire 8 A l5 [7:0] $end
$var wire 8 B l5c [7:0] $end
$var wire 7 C l5s [6:0] $end
$var wire 8 D l6 [7:0] $end
$var wire 8 E l6c [7:0] $end
$scope module l0h0 $end
$var wire 1 F A $end
$var wire 1 G B $end
$var wire 1 H Cout $end
$var wire 1 I S $end
$upscope $end
$scope module l0f0 $end
$var wire 1 J A $end
$var wire 1 K B $end
$var wire 1 L Cin $end
$var wire 1 M Cout $end
$var wire 1 N S $end
$var wire 1 O and1 $end
$var wire 1 P and2 $end
$var wire 1 Q xor1 $end
$upscope $end
$scope module l0f1 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 T Cin $end
$var wire 1 U Cout $end
$var wire 1 V S $end
$var wire 1 W and1 $end
$var wire 1 X and2 $end
$var wire 1 Y xor1 $end
$upscope $end
$scope module l0f2 $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 \ Cin $end
$var wire 1 ] Cout $end
$var wire 1 ^ S $end
$var wire 1 _ and1 $end
$var wire 1 ` and2 $end
$var wire 1 a xor1 $end
$upscope $end
$scope module l0f3 $end
$var wire 1 b A $end
$var wire 1 c B $end
$var wire 1 d Cin $end
$var wire 1 e Cout $end
$var wire 1 f S $end
$var wire 1 g and1 $end
$var wire 1 h and2 $end
$var wire 1 i xor1 $end
$upscope $end
$scope module l0f4 $end
$var wire 1 j A $end
$var wire 1 k B $end
$var wire 1 l Cin $end
$var wire 1 m Cout $end
$var wire 1 n S $end
$var wire 1 o and1 $end
$var wire 1 p and2 $end
$var wire 1 q xor1 $end
$upscope $end
$scope module l0f5 $end
$var wire 1 r A $end
$var wire 1 s B $end
$var wire 1 t Cin $end
$var wire 1 u Cout $end
$var wire 1 v S $end
$var wire 1 w and1 $end
$var wire 1 x and2 $end
$var wire 1 y xor1 $end
$upscope $end
$scope module l0h1 $end
$var wire 1 z A $end
$var wire 1 { B $end
$var wire 1 | Cout $end
$var wire 1 } S $end
$upscope $end
$scope module l1h0 $end
$var wire 1 ~ A $end
$var wire 1 !" B $end
$var wire 1 "" Cout $end
$var wire 1 #" S $end
$upscope $end
$scope module l1f0 $end
$var wire 1 $" A $end
$var wire 1 %" B $end
$var wire 1 &" Cin $end
$var wire 1 '" Cout $end
$var wire 1 (" S $end
$var wire 1 )" and1 $end
$var wire 1 *" and2 $end
$var wire 1 +" xor1 $end
$upscope $end
$scope module l1f1 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 ." Cin $end
$var wire 1 /" Cout $end
$var wire 1 0" S $end
$var wire 1 1" and1 $end
$var wire 1 2" and2 $end
$var wire 1 3" xor1 $end
$upscope $end
$scope module l1f2 $end
$var wire 1 4" A $end
$var wire 1 5" B $end
$var wire 1 6" Cin $end
$var wire 1 7" Cout $end
$var wire 1 8" S $end
$var wire 1 9" and1 $end
$var wire 1 :" and2 $end
$var wire 1 ;" xor1 $end
$upscope $end
$scope module l1f3 $end
$var wire 1 <" A $end
$var wire 1 =" B $end
$var wire 1 >" Cin $end
$var wire 1 ?" Cout $end
$var wire 1 @" S $end
$var wire 1 A" and1 $end
$var wire 1 B" and2 $end
$var wire 1 C" xor1 $end
$upscope $end
$scope module l1f4 $end
$var wire 1 D" A $end
$var wire 1 E" B $end
$var wire 1 F" Cin $end
$var wire 1 G" Cout $end
$var wire 1 H" S $end
$var wire 1 I" and1 $end
$var wire 1 J" and2 $end
$var wire 1 K" xor1 $end
$upscope $end
$scope module l1f5 $end
$var wire 1 L" A $end
$var wire 1 M" B $end
$var wire 1 N" Cin $end
$var wire 1 O" Cout $end
$var wire 1 P" S $end
$var wire 1 Q" and1 $end
$var wire 1 R" and2 $end
$var wire 1 S" xor1 $end
$upscope $end
$scope module l1f6 $end
$var wire 1 T" A $end
$var wire 1 U" B $end
$var wire 1 V" Cin $end
$var wire 1 W" Cout $end
$var wire 1 X" S $end
$var wire 1 Y" and1 $end
$var wire 1 Z" and2 $end
$var wire 1 [" xor1 $end
$upscope $end
$scope module l2h0 $end
$var wire 1 \" A $end
$var wire 1 ]" B $end
$var wire 1 ^" Cout $end
$var wire 1 _" S $end
$upscope $end
$scope module l2f0 $end
$var wire 1 `" A $end
$var wire 1 a" B $end
$var wire 1 b" Cin $end
$var wire 1 c" Cout $end
$var wire 1 d" S $end
$var wire 1 e" and1 $end
$var wire 1 f" and2 $end
$var wire 1 g" xor1 $end
$upscope $end
$scope module l2f1 $end
$var wire 1 h" A $end
$var wire 1 i" B $end
$var wire 1 j" Cin $end
$var wire 1 k" Cout $end
$var wire 1 l" S $end
$var wire 1 m" and1 $end
$var wire 1 n" and2 $end
$var wire 1 o" xor1 $end
$upscope $end
$scope module l2f2 $end
$var wire 1 p" A $end
$var wire 1 q" B $end
$var wire 1 r" Cin $end
$var wire 1 s" Cout $end
$var wire 1 t" S $end
$var wire 1 u" and1 $end
$var wire 1 v" and2 $end
$var wire 1 w" xor1 $end
$upscope $end
$scope module l2f3 $end
$var wire 1 x" A $end
$var wire 1 y" B $end
$var wire 1 z" Cin $end
$var wire 1 {" Cout $end
$var wire 1 |" S $end
$var wire 1 }" and1 $end
$var wire 1 ~" and2 $end
$var wire 1 !# xor1 $end
$upscope $end
$scope module l2f4 $end
$var wire 1 "# A $end
$var wire 1 ## B $end
$var wire 1 $# Cin $end
$var wire 1 %# Cout $end
$var wire 1 &# S $end
$var wire 1 '# and1 $end
$var wire 1 (# and2 $end
$var wire 1 )# xor1 $end
$upscope $end
$scope module l2f5 $end
$var wire 1 *# A $end
$var wire 1 +# B $end
$var wire 1 ,# Cin $end
$var wire 1 -# Cout $end
$var wire 1 .# S $end
$var wire 1 /# and1 $end
$var wire 1 0# and2 $end
$var wire 1 1# xor1 $end
$upscope $end
$scope module l2f6 $end
$var wire 1 2# A $end
$var wire 1 3# B $end
$var wire 1 4# Cin $end
$var wire 1 5# Cout $end
$var wire 1 6# S $end
$var wire 1 7# and1 $end
$var wire 1 8# and2 $end
$var wire 1 9# xor1 $end
$upscope $end
$scope module l3h0 $end
$var wire 1 :# A $end
$var wire 1 ;# B $end
$var wire 1 <# Cout $end
$var wire 1 =# S $end
$upscope $end
$scope module l3f0 $end
$var wire 1 ># A $end
$var wire 1 ?# B $end
$var wire 1 @# Cin $end
$var wire 1 A# Cout $end
$var wire 1 B# S $end
$var wire 1 C# and1 $end
$var wire 1 D# and2 $end
$var wire 1 E# xor1 $end
$upscope $end
$scope module l3f1 $end
$var wire 1 F# A $end
$var wire 1 G# B $end
$var wire 1 H# Cin $end
$var wire 1 I# Cout $end
$var wire 1 J# S $end
$var wire 1 K# and1 $end
$var wire 1 L# and2 $end
$var wire 1 M# xor1 $end
$upscope $end
$scope module l3f2 $end
$var wire 1 N# A $end
$var wire 1 O# B $end
$var wire 1 P# Cin $end
$var wire 1 Q# Cout $end
$var wire 1 R# S $end
$var wire 1 S# and1 $end
$var wire 1 T# and2 $end
$var wire 1 U# xor1 $end
$upscope $end
$scope module l3f3 $end
$var wire 1 V# A $end
$var wire 1 W# B $end
$var wire 1 X# Cin $end
$var wire 1 Y# Cout $end
$var wire 1 Z# S $end
$var wire 1 [# and1 $end
$var wire 1 \# and2 $end
$var wire 1 ]# xor1 $end
$upscope $end
$scope module l3f4 $end
$var wire 1 ^# A $end
$var wire 1 _# B $end
$var wire 1 `# Cin $end
$var wire 1 a# Cout $end
$var wire 1 b# S $end
$var wire 1 c# and1 $end
$var wire 1 d# and2 $end
$var wire 1 e# xor1 $end
$upscope $end
$scope module l3f5 $end
$var wire 1 f# A $end
$var wire 1 g# B $end
$var wire 1 h# Cin $end
$var wire 1 i# Cout $end
$var wire 1 j# S $end
$var wire 1 k# and1 $end
$var wire 1 l# and2 $end
$var wire 1 m# xor1 $end
$upscope $end
$scope module l3f6 $end
$var wire 1 n# A $end
$var wire 1 o# B $end
$var wire 1 p# Cin $end
$var wire 1 q# Cout $end
$var wire 1 r# S $end
$var wire 1 s# and1 $end
$var wire 1 t# and2 $end
$var wire 1 u# xor1 $end
$upscope $end
$scope module l4h0 $end
$var wire 1 v# A $end
$var wire 1 w# B $end
$var wire 1 x# Cout $end
$var wire 1 y# S $end
$upscope $end
$scope module l4f0 $end
$var wire 1 z# A $end
$var wire 1 {# B $end
$var wire 1 |# Cin $end
$var wire 1 }# Cout $end
$var wire 1 ~# S $end
$var wire 1 !$ and1 $end
$var wire 1 "$ and2 $end
$var wire 1 #$ xor1 $end
$upscope $end
$scope module l4f1 $end
$var wire 1 $$ A $end
$var wire 1 %$ B $end
$var wire 1 &$ Cin $end
$var wire 1 '$ Cout $end
$var wire 1 ($ S $end
$var wire 1 )$ and1 $end
$var wire 1 *$ and2 $end
$var wire 1 +$ xor1 $end
$upscope $end
$scope module l4f2 $end
$var wire 1 ,$ A $end
$var wire 1 -$ B $end
$var wire 1 .$ Cin $end
$var wire 1 /$ Cout $end
$var wire 1 0$ S $end
$var wire 1 1$ and1 $end
$var wire 1 2$ and2 $end
$var wire 1 3$ xor1 $end
$upscope $end
$scope module l4f3 $end
$var wire 1 4$ A $end
$var wire 1 5$ B $end
$var wire 1 6$ Cin $end
$var wire 1 7$ Cout $end
$var wire 1 8$ S $end
$var wire 1 9$ and1 $end
$var wire 1 :$ and2 $end
$var wire 1 ;$ xor1 $end
$upscope $end
$scope module l4f4 $end
$var wire 1 <$ A $end
$var wire 1 =$ B $end
$var wire 1 >$ Cin $end
$var wire 1 ?$ Cout $end
$var wire 1 @$ S $end
$var wire 1 A$ and1 $end
$var wire 1 B$ and2 $end
$var wire 1 C$ xor1 $end
$upscope $end
$scope module l4f5 $end
$var wire 1 D$ A $end
$var wire 1 E$ B $end
$var wire 1 F$ Cin $end
$var wire 1 G$ Cout $end
$var wire 1 H$ S $end
$var wire 1 I$ and1 $end
$var wire 1 J$ and2 $end
$var wire 1 K$ xor1 $end
$upscope $end
$scope module l4f6 $end
$var wire 1 L$ A $end
$var wire 1 M$ B $end
$var wire 1 N$ Cin $end
$var wire 1 O$ Cout $end
$var wire 1 P$ S $end
$var wire 1 Q$ and1 $end
$var wire 1 R$ and2 $end
$var wire 1 S$ xor1 $end
$upscope $end
$scope module l5h0 $end
$var wire 1 T$ A $end
$var wire 1 U$ B $end
$var wire 1 V$ Cout $end
$var wire 1 W$ S $end
$upscope $end
$scope module l5f0 $end
$var wire 1 X$ A $end
$var wire 1 Y$ B $end
$var wire 1 Z$ Cin $end
$var wire 1 [$ Cout $end
$var wire 1 \$ S $end
$var wire 1 ]$ and1 $end
$var wire 1 ^$ and2 $end
$var wire 1 _$ xor1 $end
$upscope $end
$scope module l5f1 $end
$var wire 1 `$ A $end
$var wire 1 a$ B $end
$var wire 1 b$ Cin $end
$var wire 1 c$ Cout $end
$var wire 1 d$ S $end
$var wire 1 e$ and1 $end
$var wire 1 f$ and2 $end
$var wire 1 g$ xor1 $end
$upscope $end
$scope module l5f2 $end
$var wire 1 h$ A $end
$var wire 1 i$ B $end
$var wire 1 j$ Cin $end
$var wire 1 k$ Cout $end
$var wire 1 l$ S $end
$var wire 1 m$ and1 $end
$var wire 1 n$ and2 $end
$var wire 1 o$ xor1 $end
$upscope $end
$scope module l5f3 $end
$var wire 1 p$ A $end
$var wire 1 q$ B $end
$var wire 1 r$ Cin $end
$var wire 1 s$ Cout $end
$var wire 1 t$ S $end
$var wire 1 u$ and1 $end
$var wire 1 v$ and2 $end
$var wire 1 w$ xor1 $end
$upscope $end
$scope module l5f4 $end
$var wire 1 x$ A $end
$var wire 1 y$ B $end
$var wire 1 z$ Cin $end
$var wire 1 {$ Cout $end
$var wire 1 |$ S $end
$var wire 1 }$ and1 $end
$var wire 1 ~$ and2 $end
$var wire 1 !% xor1 $end
$upscope $end
$scope module l5f5 $end
$var wire 1 "% A $end
$var wire 1 #% B $end
$var wire 1 $% Cin $end
$var wire 1 %% Cout $end
$var wire 1 &% S $end
$var wire 1 '% and1 $end
$var wire 1 (% and2 $end
$var wire 1 )% xor1 $end
$upscope $end
$scope module l5f6 $end
$var wire 1 *% A $end
$var wire 1 +% B $end
$var wire 1 ,% Cin $end
$var wire 1 -% Cout $end
$var wire 1 .% S $end
$var wire 1 /% and1 $end
$var wire 1 0% and2 $end
$var wire 1 1% xor1 $end
$upscope $end
$scope module l6h0 $end
$var wire 1 2% A $end
$var wire 1 3% B $end
$var wire 1 4% Cout $end
$var wire 1 5% S $end
$upscope $end
$scope module l6f0 $end
$var wire 1 6% A $end
$var wire 1 7% B $end
$var wire 1 8% Cin $end
$var wire 1 9% Cout $end
$var wire 1 :% S $end
$var wire 1 ;% and1 $end
$var wire 1 <% and2 $end
$var wire 1 =% xor1 $end
$upscope $end
$scope module l6f1 $end
$var wire 1 >% A $end
$var wire 1 ?% B $end
$var wire 1 @% Cin $end
$var wire 1 A% Cout $end
$var wire 1 B% S $end
$var wire 1 C% and1 $end
$var wire 1 D% and2 $end
$var wire 1 E% xor1 $end
$upscope $end
$scope module l6f2 $end
$var wire 1 F% A $end
$var wire 1 G% B $end
$var wire 1 H% Cin $end
$var wire 1 I% Cout $end
$var wire 1 J% S $end
$var wire 1 K% and1 $end
$var wire 1 L% and2 $end
$var wire 1 M% xor1 $end
$upscope $end
$scope module l6f3 $end
$var wire 1 N% A $end
$var wire 1 O% B $end
$var wire 1 P% Cin $end
$var wire 1 Q% Cout $end
$var wire 1 R% S $end
$var wire 1 S% and1 $end
$var wire 1 T% and2 $end
$var wire 1 U% xor1 $end
$upscope $end
$scope module l6f4 $end
$var wire 1 V% A $end
$var wire 1 W% B $end
$var wire 1 X% Cin $end
$var wire 1 Y% Cout $end
$var wire 1 Z% S $end
$var wire 1 [% and1 $end
$var wire 1 \% and2 $end
$var wire 1 ]% xor1 $end
$upscope $end
$scope module l6f5 $end
$var wire 1 ^% A $end
$var wire 1 _% B $end
$var wire 1 `% Cin $end
$var wire 1 a% Cout $end
$var wire 1 b% S $end
$var wire 1 c% and1 $end
$var wire 1 d% and2 $end
$var wire 1 e% xor1 $end
$upscope $end
$scope module l6f6 $end
$var wire 1 f% A $end
$var wire 1 g% B $end
$var wire 1 h% Cin $end
$var wire 1 i% Cout $end
$var wire 1 j% S $end
$var wire 1 k% and1 $end
$var wire 1 l% and2 $end
$var wire 1 m% xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
bz0000000 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
0,
1+
0*
b0 )
b0 (
b0 '
0&
1%
0$
b0 #
b0 "
b0 !
$end
#2
1$
1*
#4
b101101 #
b101101 (
b1100 "
b1100 '
0$
0*
#6
1B%
1E%
1?%
1l$
1o$
1i$
18$
16$
1/$
11$
1.$
1'$
b1100 ?
1*$
1%$
1R#
1U#
1O#
1|"
0W$
1z"
0U$
1s"
0~#
0:%
1_"
1=#
1u"
0y#
0#$
05%
0=%
1]"
1;#
1r"
0w#
0{#
03%
07%
1("
1d"
1k"
b1100 9
0B#
0J#
b100 =
0\$
0d$
b100 C
1#"
b1000011100 !
b1000011100 )
b1000011100 1
1+"
1g"
1n"
0E#
0M#
0_$
0g$
1!"
1%"
1a"
1i"
0?#
0G#
0Y$
0a$
1N
1V
b11 4
10"
18"
b111 7
0l"
0t"
b1001 :
0($
00$
b1000 @
1Q
1Y
13"
1;"
0o"
1w"
0+$
13$
1J
1R
1,"
14"
1h"
1p"
1$$
1,$
b10100 2
b1100 5
b1100 8
b1100 >
b101101 .
b101101 0
b1100 -
b1100 /
1$
1*
#8
0$
0*
#10
1$
1*
#12
0$
0*
#14
1$
1*
#16
0$
0*
#18
1$
1*
#20
0$
0*
#22
1$
1*
#24
0$
0*
#26
1$
1*
#28
0$
0*
#30
1$
1*
#32
0$
0*
#34
1$
1*
#36
0$
0*
#38
1$
1*
#40
0$
0*
#42
1$
1*
#44
0$
0*
#46
1$
1*
#48
0$
0*
#50
1$
1*
#52
0$
0*
#54
1$
1*
