$date
	Sat Oct  6 14:00:34 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module full_adder_tb $end
$var wire 1 ! Cout $end
$var wire 1 " S $end
$var reg 1 # A $end
$var reg 1 $ B $end
$var reg 1 % Cin $end
$var integer 32 & i [31:0] $end
$var integer 32 ' j [31:0] $end
$var integer 32 ( k [31:0] $end
$scope module dut $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 + Cin $end
$var wire 1 ! Cout $end
$var wire 1 " S $end
$var wire 1 , and1 $end
$var wire 1 - and2 $end
$var wire 1 . xor1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0.
0-
0,
0+
0*
0)
bx (
bx '
bx &
0%
0$
0#
0"
0!
$end
#5
b0 (
b0 '
b0 &
#10
1"
1%
1+
b1 (
#15
0"
0%
0+
b10 (
#20
1"
1.
1$
1*
b0 (
b1 '
#25
1!
0"
1,
1%
1+
b1 (
#30
0!
1"
0,
0%
0+
b10 (
#35
0"
0.
0$
0*
b10 '
#40
1"
1.
1#
1)
b0 (
b0 '
b1 &
#45
1!
0"
1,
1%
1+
b1 (
#50
0!
1"
0,
0%
0+
b10 (
#55
0"
1!
0.
1-
1$
1*
b0 (
b1 '
#60
1"
1%
1+
b1 (
#65
0"
0%
0+
b10 (
#70
1"
0!
1.
0-
0$
0*
b10 '
#75
0"
0.
0#
0)
b10 &
#85
