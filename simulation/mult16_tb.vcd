$date
	Sun Oct  7 12:41:49 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mult16_tb $end
$var wire 16 ! Y [15:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$scope module dut $end
$var wire 8 $ A [7:0] $end
$var wire 8 % B [7:0] $end
$var wire 16 & Y [15:0] $end
$var wire 15 ' l0 [15:1] $end
$var wire 8 ( l0c [7:0] $end
$var wire 7 ) l0s [6:0] $end
$var wire 8 * l1 [7:0] $end
$var wire 8 + l1c [7:0] $end
$var wire 7 , l1s [6:0] $end
$var wire 8 - l2 [7:0] $end
$var wire 8 . l2c [7:0] $end
$var wire 7 / l2s [6:0] $end
$var wire 8 0 l3 [7:0] $end
$var wire 8 1 l3c [7:0] $end
$var wire 7 2 l3s [6:0] $end
$var wire 8 3 l4 [7:0] $end
$var wire 8 4 l4c [7:0] $end
$var wire 7 5 l4s [6:0] $end
$var wire 8 6 l5 [7:0] $end
$var wire 8 7 l5c [7:0] $end
$var wire 7 8 l5s [6:0] $end
$var wire 8 9 l6 [7:0] $end
$var wire 8 : l6c [7:0] $end
$scope module l0h0 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 = Cout $end
$var wire 1 > S $end
$upscope $end
$scope module l0f0 $end
$var wire 1 ? A $end
$var wire 1 @ B $end
$var wire 1 A Cin $end
$var wire 1 B Cout $end
$var wire 1 C S $end
$var wire 1 D and1 $end
$var wire 1 E and2 $end
$var wire 1 F xor1 $end
$upscope $end
$scope module l0f1 $end
$var wire 1 G A $end
$var wire 1 H B $end
$var wire 1 I Cin $end
$var wire 1 J Cout $end
$var wire 1 K S $end
$var wire 1 L and1 $end
$var wire 1 M and2 $end
$var wire 1 N xor1 $end
$upscope $end
$scope module l0f2 $end
$var wire 1 O A $end
$var wire 1 P B $end
$var wire 1 Q Cin $end
$var wire 1 R Cout $end
$var wire 1 S S $end
$var wire 1 T and1 $end
$var wire 1 U and2 $end
$var wire 1 V xor1 $end
$upscope $end
$scope module l0f3 $end
$var wire 1 W A $end
$var wire 1 X B $end
$var wire 1 Y Cin $end
$var wire 1 Z Cout $end
$var wire 1 [ S $end
$var wire 1 \ and1 $end
$var wire 1 ] and2 $end
$var wire 1 ^ xor1 $end
$upscope $end
$scope module l0f4 $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 a Cin $end
$var wire 1 b Cout $end
$var wire 1 c S $end
$var wire 1 d and1 $end
$var wire 1 e and2 $end
$var wire 1 f xor1 $end
$upscope $end
$scope module l0f5 $end
$var wire 1 g A $end
$var wire 1 h B $end
$var wire 1 i Cin $end
$var wire 1 j Cout $end
$var wire 1 k S $end
$var wire 1 l and1 $end
$var wire 1 m and2 $end
$var wire 1 n xor1 $end
$upscope $end
$scope module l0h1 $end
$var wire 1 o A $end
$var wire 1 p B $end
$var wire 1 q Cout $end
$var wire 1 r S $end
$upscope $end
$scope module l1h0 $end
$var wire 1 s A $end
$var wire 1 t B $end
$var wire 1 u Cout $end
$var wire 1 v S $end
$upscope $end
$scope module l1f0 $end
$var wire 1 w A $end
$var wire 1 x B $end
$var wire 1 y Cin $end
$var wire 1 z Cout $end
$var wire 1 { S $end
$var wire 1 | and1 $end
$var wire 1 } and2 $end
$var wire 1 ~ xor1 $end
$upscope $end
$scope module l1f1 $end
$var wire 1 !" A $end
$var wire 1 "" B $end
$var wire 1 #" Cin $end
$var wire 1 $" Cout $end
$var wire 1 %" S $end
$var wire 1 &" and1 $end
$var wire 1 '" and2 $end
$var wire 1 (" xor1 $end
$upscope $end
$scope module l1f2 $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 +" Cin $end
$var wire 1 ," Cout $end
$var wire 1 -" S $end
$var wire 1 ." and1 $end
$var wire 1 /" and2 $end
$var wire 1 0" xor1 $end
$upscope $end
$scope module l1f3 $end
$var wire 1 1" A $end
$var wire 1 2" B $end
$var wire 1 3" Cin $end
$var wire 1 4" Cout $end
$var wire 1 5" S $end
$var wire 1 6" and1 $end
$var wire 1 7" and2 $end
$var wire 1 8" xor1 $end
$upscope $end
$scope module l1f4 $end
$var wire 1 9" A $end
$var wire 1 :" B $end
$var wire 1 ;" Cin $end
$var wire 1 <" Cout $end
$var wire 1 =" S $end
$var wire 1 >" and1 $end
$var wire 1 ?" and2 $end
$var wire 1 @" xor1 $end
$upscope $end
$scope module l1f5 $end
$var wire 1 A" A $end
$var wire 1 B" B $end
$var wire 1 C" Cin $end
$var wire 1 D" Cout $end
$var wire 1 E" S $end
$var wire 1 F" and1 $end
$var wire 1 G" and2 $end
$var wire 1 H" xor1 $end
$upscope $end
$scope module l1f6 $end
$var wire 1 I" A $end
$var wire 1 J" B $end
$var wire 1 K" Cin $end
$var wire 1 L" Cout $end
$var wire 1 M" S $end
$var wire 1 N" and1 $end
$var wire 1 O" and2 $end
$var wire 1 P" xor1 $end
$upscope $end
$scope module l2h0 $end
$var wire 1 Q" A $end
$var wire 1 R" B $end
$var wire 1 S" Cout $end
$var wire 1 T" S $end
$upscope $end
$scope module l2f0 $end
$var wire 1 U" A $end
$var wire 1 V" B $end
$var wire 1 W" Cin $end
$var wire 1 X" Cout $end
$var wire 1 Y" S $end
$var wire 1 Z" and1 $end
$var wire 1 [" and2 $end
$var wire 1 \" xor1 $end
$upscope $end
$scope module l2f1 $end
$var wire 1 ]" A $end
$var wire 1 ^" B $end
$var wire 1 _" Cin $end
$var wire 1 `" Cout $end
$var wire 1 a" S $end
$var wire 1 b" and1 $end
$var wire 1 c" and2 $end
$var wire 1 d" xor1 $end
$upscope $end
$scope module l2f2 $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 g" Cin $end
$var wire 1 h" Cout $end
$var wire 1 i" S $end
$var wire 1 j" and1 $end
$var wire 1 k" and2 $end
$var wire 1 l" xor1 $end
$upscope $end
$scope module l2f3 $end
$var wire 1 m" A $end
$var wire 1 n" B $end
$var wire 1 o" Cin $end
$var wire 1 p" Cout $end
$var wire 1 q" S $end
$var wire 1 r" and1 $end
$var wire 1 s" and2 $end
$var wire 1 t" xor1 $end
$upscope $end
$scope module l2f4 $end
$var wire 1 u" A $end
$var wire 1 v" B $end
$var wire 1 w" Cin $end
$var wire 1 x" Cout $end
$var wire 1 y" S $end
$var wire 1 z" and1 $end
$var wire 1 {" and2 $end
$var wire 1 |" xor1 $end
$upscope $end
$scope module l2f5 $end
$var wire 1 }" A $end
$var wire 1 ~" B $end
$var wire 1 !# Cin $end
$var wire 1 "# Cout $end
$var wire 1 ## S $end
$var wire 1 $# and1 $end
$var wire 1 %# and2 $end
$var wire 1 &# xor1 $end
$upscope $end
$scope module l2f6 $end
$var wire 1 '# A $end
$var wire 1 (# B $end
$var wire 1 )# Cin $end
$var wire 1 *# Cout $end
$var wire 1 +# S $end
$var wire 1 ,# and1 $end
$var wire 1 -# and2 $end
$var wire 1 .# xor1 $end
$upscope $end
$scope module l3h0 $end
$var wire 1 /# A $end
$var wire 1 0# B $end
$var wire 1 1# Cout $end
$var wire 1 2# S $end
$upscope $end
$scope module l3f0 $end
$var wire 1 3# A $end
$var wire 1 4# B $end
$var wire 1 5# Cin $end
$var wire 1 6# Cout $end
$var wire 1 7# S $end
$var wire 1 8# and1 $end
$var wire 1 9# and2 $end
$var wire 1 :# xor1 $end
$upscope $end
$scope module l3f1 $end
$var wire 1 ;# A $end
$var wire 1 <# B $end
$var wire 1 =# Cin $end
$var wire 1 ># Cout $end
$var wire 1 ?# S $end
$var wire 1 @# and1 $end
$var wire 1 A# and2 $end
$var wire 1 B# xor1 $end
$upscope $end
$scope module l3f2 $end
$var wire 1 C# A $end
$var wire 1 D# B $end
$var wire 1 E# Cin $end
$var wire 1 F# Cout $end
$var wire 1 G# S $end
$var wire 1 H# and1 $end
$var wire 1 I# and2 $end
$var wire 1 J# xor1 $end
$upscope $end
$scope module l3f3 $end
$var wire 1 K# A $end
$var wire 1 L# B $end
$var wire 1 M# Cin $end
$var wire 1 N# Cout $end
$var wire 1 O# S $end
$var wire 1 P# and1 $end
$var wire 1 Q# and2 $end
$var wire 1 R# xor1 $end
$upscope $end
$scope module l3f4 $end
$var wire 1 S# A $end
$var wire 1 T# B $end
$var wire 1 U# Cin $end
$var wire 1 V# Cout $end
$var wire 1 W# S $end
$var wire 1 X# and1 $end
$var wire 1 Y# and2 $end
$var wire 1 Z# xor1 $end
$upscope $end
$scope module l3f5 $end
$var wire 1 [# A $end
$var wire 1 \# B $end
$var wire 1 ]# Cin $end
$var wire 1 ^# Cout $end
$var wire 1 _# S $end
$var wire 1 `# and1 $end
$var wire 1 a# and2 $end
$var wire 1 b# xor1 $end
$upscope $end
$scope module l3f6 $end
$var wire 1 c# A $end
$var wire 1 d# B $end
$var wire 1 e# Cin $end
$var wire 1 f# Cout $end
$var wire 1 g# S $end
$var wire 1 h# and1 $end
$var wire 1 i# and2 $end
$var wire 1 j# xor1 $end
$upscope $end
$scope module l4h0 $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 m# Cout $end
$var wire 1 n# S $end
$upscope $end
$scope module l4f0 $end
$var wire 1 o# A $end
$var wire 1 p# B $end
$var wire 1 q# Cin $end
$var wire 1 r# Cout $end
$var wire 1 s# S $end
$var wire 1 t# and1 $end
$var wire 1 u# and2 $end
$var wire 1 v# xor1 $end
$upscope $end
$scope module l4f1 $end
$var wire 1 w# A $end
$var wire 1 x# B $end
$var wire 1 y# Cin $end
$var wire 1 z# Cout $end
$var wire 1 {# S $end
$var wire 1 |# and1 $end
$var wire 1 }# and2 $end
$var wire 1 ~# xor1 $end
$upscope $end
$scope module l4f2 $end
$var wire 1 !$ A $end
$var wire 1 "$ B $end
$var wire 1 #$ Cin $end
$var wire 1 $$ Cout $end
$var wire 1 %$ S $end
$var wire 1 &$ and1 $end
$var wire 1 '$ and2 $end
$var wire 1 ($ xor1 $end
$upscope $end
$scope module l4f3 $end
$var wire 1 )$ A $end
$var wire 1 *$ B $end
$var wire 1 +$ Cin $end
$var wire 1 ,$ Cout $end
$var wire 1 -$ S $end
$var wire 1 .$ and1 $end
$var wire 1 /$ and2 $end
$var wire 1 0$ xor1 $end
$upscope $end
$scope module l4f4 $end
$var wire 1 1$ A $end
$var wire 1 2$ B $end
$var wire 1 3$ Cin $end
$var wire 1 4$ Cout $end
$var wire 1 5$ S $end
$var wire 1 6$ and1 $end
$var wire 1 7$ and2 $end
$var wire 1 8$ xor1 $end
$upscope $end
$scope module l4f5 $end
$var wire 1 9$ A $end
$var wire 1 :$ B $end
$var wire 1 ;$ Cin $end
$var wire 1 <$ Cout $end
$var wire 1 =$ S $end
$var wire 1 >$ and1 $end
$var wire 1 ?$ and2 $end
$var wire 1 @$ xor1 $end
$upscope $end
$scope module l4f6 $end
$var wire 1 A$ A $end
$var wire 1 B$ B $end
$var wire 1 C$ Cin $end
$var wire 1 D$ Cout $end
$var wire 1 E$ S $end
$var wire 1 F$ and1 $end
$var wire 1 G$ and2 $end
$var wire 1 H$ xor1 $end
$upscope $end
$scope module l5h0 $end
$var wire 1 I$ A $end
$var wire 1 J$ B $end
$var wire 1 K$ Cout $end
$var wire 1 L$ S $end
$upscope $end
$scope module l5f0 $end
$var wire 1 M$ A $end
$var wire 1 N$ B $end
$var wire 1 O$ Cin $end
$var wire 1 P$ Cout $end
$var wire 1 Q$ S $end
$var wire 1 R$ and1 $end
$var wire 1 S$ and2 $end
$var wire 1 T$ xor1 $end
$upscope $end
$scope module l5f1 $end
$var wire 1 U$ A $end
$var wire 1 V$ B $end
$var wire 1 W$ Cin $end
$var wire 1 X$ Cout $end
$var wire 1 Y$ S $end
$var wire 1 Z$ and1 $end
$var wire 1 [$ and2 $end
$var wire 1 \$ xor1 $end
$upscope $end
$scope module l5f2 $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 _$ Cin $end
$var wire 1 `$ Cout $end
$var wire 1 a$ S $end
$var wire 1 b$ and1 $end
$var wire 1 c$ and2 $end
$var wire 1 d$ xor1 $end
$upscope $end
$scope module l5f3 $end
$var wire 1 e$ A $end
$var wire 1 f$ B $end
$var wire 1 g$ Cin $end
$var wire 1 h$ Cout $end
$var wire 1 i$ S $end
$var wire 1 j$ and1 $end
$var wire 1 k$ and2 $end
$var wire 1 l$ xor1 $end
$upscope $end
$scope module l5f4 $end
$var wire 1 m$ A $end
$var wire 1 n$ B $end
$var wire 1 o$ Cin $end
$var wire 1 p$ Cout $end
$var wire 1 q$ S $end
$var wire 1 r$ and1 $end
$var wire 1 s$ and2 $end
$var wire 1 t$ xor1 $end
$upscope $end
$scope module l5f5 $end
$var wire 1 u$ A $end
$var wire 1 v$ B $end
$var wire 1 w$ Cin $end
$var wire 1 x$ Cout $end
$var wire 1 y$ S $end
$var wire 1 z$ and1 $end
$var wire 1 {$ and2 $end
$var wire 1 |$ xor1 $end
$upscope $end
$scope module l5f6 $end
$var wire 1 }$ A $end
$var wire 1 ~$ B $end
$var wire 1 !% Cin $end
$var wire 1 "% Cout $end
$var wire 1 #% S $end
$var wire 1 $% and1 $end
$var wire 1 %% and2 $end
$var wire 1 &% xor1 $end
$upscope $end
$scope module l6h0 $end
$var wire 1 '% A $end
$var wire 1 (% B $end
$var wire 1 )% Cout $end
$var wire 1 *% S $end
$upscope $end
$scope module l6f0 $end
$var wire 1 +% A $end
$var wire 1 ,% B $end
$var wire 1 -% Cin $end
$var wire 1 .% Cout $end
$var wire 1 /% S $end
$var wire 1 0% and1 $end
$var wire 1 1% and2 $end
$var wire 1 2% xor1 $end
$upscope $end
$scope module l6f1 $end
$var wire 1 3% A $end
$var wire 1 4% B $end
$var wire 1 5% Cin $end
$var wire 1 6% Cout $end
$var wire 1 7% S $end
$var wire 1 8% and1 $end
$var wire 1 9% and2 $end
$var wire 1 :% xor1 $end
$upscope $end
$scope module l6f2 $end
$var wire 1 ;% A $end
$var wire 1 <% B $end
$var wire 1 =% Cin $end
$var wire 1 >% Cout $end
$var wire 1 ?% S $end
$var wire 1 @% and1 $end
$var wire 1 A% and2 $end
$var wire 1 B% xor1 $end
$upscope $end
$scope module l6f3 $end
$var wire 1 C% A $end
$var wire 1 D% B $end
$var wire 1 E% Cin $end
$var wire 1 F% Cout $end
$var wire 1 G% S $end
$var wire 1 H% and1 $end
$var wire 1 I% and2 $end
$var wire 1 J% xor1 $end
$upscope $end
$scope module l6f4 $end
$var wire 1 K% A $end
$var wire 1 L% B $end
$var wire 1 M% Cin $end
$var wire 1 N% Cout $end
$var wire 1 O% S $end
$var wire 1 P% and1 $end
$var wire 1 Q% and2 $end
$var wire 1 R% xor1 $end
$upscope $end
$scope module l6f5 $end
$var wire 1 S% A $end
$var wire 1 T% B $end
$var wire 1 U% Cin $end
$var wire 1 V% Cout $end
$var wire 1 W% S $end
$var wire 1 X% and1 $end
$var wire 1 Y% and2 $end
$var wire 1 Z% xor1 $end
$upscope $end
$scope module l6f6 $end
$var wire 1 [% A $end
$var wire 1 \% B $end
$var wire 1 ]% Cin $end
$var wire 1 ^% Cout $end
$var wire 1 _% S $end
$var wire 1 `% and1 $end
$var wire 1 a% and2 $end
$var wire 1 b% xor1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module regmult16_tb $end
$var wire 16 c% Y [15:0] $end
$var reg 8 d% A [7:0] $end
$var reg 8 e% B [7:0] $end
$var reg 1 f% clk $end
$var reg 1 g% clk_en $end
$var reg 1 h% en $end
$var reg 1 i% rst $end
$scope module dut $end
$var wire 8 j% A [7:0] $end
$var wire 8 k% B [7:0] $end
$var wire 16 l% Y [15:0] $end
$var wire 1 m% clk $end
$var wire 1 n% en $end
$var wire 1 o% rst $end
$var reg 8 p% A_reg [7:0] $end
$var reg 8 q% B_reg [7:0] $end
$scope module multiplier $end
$var wire 8 r% A [7:0] $end
$var wire 8 s% B [7:0] $end
$var wire 16 t% Y [15:0] $end
$var wire 15 u% l0 [15:1] $end
$var wire 8 v% l0c [7:0] $end
$var wire 7 w% l0s [6:0] $end
$var wire 8 x% l1 [7:0] $end
$var wire 8 y% l1c [7:0] $end
$var wire 7 z% l1s [6:0] $end
$var wire 8 {% l2 [7:0] $end
$var wire 8 |% l2c [7:0] $end
$var wire 7 }% l2s [6:0] $end
$var wire 8 ~% l3 [7:0] $end
$var wire 8 !& l3c [7:0] $end
$var wire 7 "& l3s [6:0] $end
$var wire 8 #& l4 [7:0] $end
$var wire 8 $& l4c [7:0] $end
$var wire 7 %& l4s [6:0] $end
$var wire 8 && l5 [7:0] $end
$var wire 8 '& l5c [7:0] $end
$var wire 7 (& l5s [6:0] $end
$var wire 8 )& l6 [7:0] $end
$var wire 8 *& l6c [7:0] $end
$scope module l0h0 $end
$var wire 1 +& A $end
$var wire 1 ,& B $end
$var wire 1 -& Cout $end
$var wire 1 .& S $end
$upscope $end
$scope module l0f0 $end
$var wire 1 /& A $end
$var wire 1 0& B $end
$var wire 1 1& Cin $end
$var wire 1 2& Cout $end
$var wire 1 3& S $end
$var wire 1 4& and1 $end
$var wire 1 5& and2 $end
$var wire 1 6& xor1 $end
$upscope $end
$scope module l0f1 $end
$var wire 1 7& A $end
$var wire 1 8& B $end
$var wire 1 9& Cin $end
$var wire 1 :& Cout $end
$var wire 1 ;& S $end
$var wire 1 <& and1 $end
$var wire 1 =& and2 $end
$var wire 1 >& xor1 $end
$upscope $end
$scope module l0f2 $end
$var wire 1 ?& A $end
$var wire 1 @& B $end
$var wire 1 A& Cin $end
$var wire 1 B& Cout $end
$var wire 1 C& S $end
$var wire 1 D& and1 $end
$var wire 1 E& and2 $end
$var wire 1 F& xor1 $end
$upscope $end
$scope module l0f3 $end
$var wire 1 G& A $end
$var wire 1 H& B $end
$var wire 1 I& Cin $end
$var wire 1 J& Cout $end
$var wire 1 K& S $end
$var wire 1 L& and1 $end
$var wire 1 M& and2 $end
$var wire 1 N& xor1 $end
$upscope $end
$scope module l0f4 $end
$var wire 1 O& A $end
$var wire 1 P& B $end
$var wire 1 Q& Cin $end
$var wire 1 R& Cout $end
$var wire 1 S& S $end
$var wire 1 T& and1 $end
$var wire 1 U& and2 $end
$var wire 1 V& xor1 $end
$upscope $end
$scope module l0f5 $end
$var wire 1 W& A $end
$var wire 1 X& B $end
$var wire 1 Y& Cin $end
$var wire 1 Z& Cout $end
$var wire 1 [& S $end
$var wire 1 \& and1 $end
$var wire 1 ]& and2 $end
$var wire 1 ^& xor1 $end
$upscope $end
$scope module l0h1 $end
$var wire 1 _& A $end
$var wire 1 `& B $end
$var wire 1 a& Cout $end
$var wire 1 b& S $end
$upscope $end
$scope module l1h0 $end
$var wire 1 c& A $end
$var wire 1 d& B $end
$var wire 1 e& Cout $end
$var wire 1 f& S $end
$upscope $end
$scope module l1f0 $end
$var wire 1 g& A $end
$var wire 1 h& B $end
$var wire 1 i& Cin $end
$var wire 1 j& Cout $end
$var wire 1 k& S $end
$var wire 1 l& and1 $end
$var wire 1 m& and2 $end
$var wire 1 n& xor1 $end
$upscope $end
$scope module l1f1 $end
$var wire 1 o& A $end
$var wire 1 p& B $end
$var wire 1 q& Cin $end
$var wire 1 r& Cout $end
$var wire 1 s& S $end
$var wire 1 t& and1 $end
$var wire 1 u& and2 $end
$var wire 1 v& xor1 $end
$upscope $end
$scope module l1f2 $end
$var wire 1 w& A $end
$var wire 1 x& B $end
$var wire 1 y& Cin $end
$var wire 1 z& Cout $end
$var wire 1 {& S $end
$var wire 1 |& and1 $end
$var wire 1 }& and2 $end
$var wire 1 ~& xor1 $end
$upscope $end
$scope module l1f3 $end
$var wire 1 !' A $end
$var wire 1 "' B $end
$var wire 1 #' Cin $end
$var wire 1 $' Cout $end
$var wire 1 %' S $end
$var wire 1 &' and1 $end
$var wire 1 '' and2 $end
$var wire 1 (' xor1 $end
$upscope $end
$scope module l1f4 $end
$var wire 1 )' A $end
$var wire 1 *' B $end
$var wire 1 +' Cin $end
$var wire 1 ,' Cout $end
$var wire 1 -' S $end
$var wire 1 .' and1 $end
$var wire 1 /' and2 $end
$var wire 1 0' xor1 $end
$upscope $end
$scope module l1f5 $end
$var wire 1 1' A $end
$var wire 1 2' B $end
$var wire 1 3' Cin $end
$var wire 1 4' Cout $end
$var wire 1 5' S $end
$var wire 1 6' and1 $end
$var wire 1 7' and2 $end
$var wire 1 8' xor1 $end
$upscope $end
$scope module l1f6 $end
$var wire 1 9' A $end
$var wire 1 :' B $end
$var wire 1 ;' Cin $end
$var wire 1 <' Cout $end
$var wire 1 =' S $end
$var wire 1 >' and1 $end
$var wire 1 ?' and2 $end
$var wire 1 @' xor1 $end
$upscope $end
$scope module l2h0 $end
$var wire 1 A' A $end
$var wire 1 B' B $end
$var wire 1 C' Cout $end
$var wire 1 D' S $end
$upscope $end
$scope module l2f0 $end
$var wire 1 E' A $end
$var wire 1 F' B $end
$var wire 1 G' Cin $end
$var wire 1 H' Cout $end
$var wire 1 I' S $end
$var wire 1 J' and1 $end
$var wire 1 K' and2 $end
$var wire 1 L' xor1 $end
$upscope $end
$scope module l2f1 $end
$var wire 1 M' A $end
$var wire 1 N' B $end
$var wire 1 O' Cin $end
$var wire 1 P' Cout $end
$var wire 1 Q' S $end
$var wire 1 R' and1 $end
$var wire 1 S' and2 $end
$var wire 1 T' xor1 $end
$upscope $end
$scope module l2f2 $end
$var wire 1 U' A $end
$var wire 1 V' B $end
$var wire 1 W' Cin $end
$var wire 1 X' Cout $end
$var wire 1 Y' S $end
$var wire 1 Z' and1 $end
$var wire 1 [' and2 $end
$var wire 1 \' xor1 $end
$upscope $end
$scope module l2f3 $end
$var wire 1 ]' A $end
$var wire 1 ^' B $end
$var wire 1 _' Cin $end
$var wire 1 `' Cout $end
$var wire 1 a' S $end
$var wire 1 b' and1 $end
$var wire 1 c' and2 $end
$var wire 1 d' xor1 $end
$upscope $end
$scope module l2f4 $end
$var wire 1 e' A $end
$var wire 1 f' B $end
$var wire 1 g' Cin $end
$var wire 1 h' Cout $end
$var wire 1 i' S $end
$var wire 1 j' and1 $end
$var wire 1 k' and2 $end
$var wire 1 l' xor1 $end
$upscope $end
$scope module l2f5 $end
$var wire 1 m' A $end
$var wire 1 n' B $end
$var wire 1 o' Cin $end
$var wire 1 p' Cout $end
$var wire 1 q' S $end
$var wire 1 r' and1 $end
$var wire 1 s' and2 $end
$var wire 1 t' xor1 $end
$upscope $end
$scope module l2f6 $end
$var wire 1 u' A $end
$var wire 1 v' B $end
$var wire 1 w' Cin $end
$var wire 1 x' Cout $end
$var wire 1 y' S $end
$var wire 1 z' and1 $end
$var wire 1 {' and2 $end
$var wire 1 |' xor1 $end
$upscope $end
$scope module l3h0 $end
$var wire 1 }' A $end
$var wire 1 ~' B $end
$var wire 1 !( Cout $end
$var wire 1 "( S $end
$upscope $end
$scope module l3f0 $end
$var wire 1 #( A $end
$var wire 1 $( B $end
$var wire 1 %( Cin $end
$var wire 1 &( Cout $end
$var wire 1 '( S $end
$var wire 1 (( and1 $end
$var wire 1 )( and2 $end
$var wire 1 *( xor1 $end
$upscope $end
$scope module l3f1 $end
$var wire 1 +( A $end
$var wire 1 ,( B $end
$var wire 1 -( Cin $end
$var wire 1 .( Cout $end
$var wire 1 /( S $end
$var wire 1 0( and1 $end
$var wire 1 1( and2 $end
$var wire 1 2( xor1 $end
$upscope $end
$scope module l3f2 $end
$var wire 1 3( A $end
$var wire 1 4( B $end
$var wire 1 5( Cin $end
$var wire 1 6( Cout $end
$var wire 1 7( S $end
$var wire 1 8( and1 $end
$var wire 1 9( and2 $end
$var wire 1 :( xor1 $end
$upscope $end
$scope module l3f3 $end
$var wire 1 ;( A $end
$var wire 1 <( B $end
$var wire 1 =( Cin $end
$var wire 1 >( Cout $end
$var wire 1 ?( S $end
$var wire 1 @( and1 $end
$var wire 1 A( and2 $end
$var wire 1 B( xor1 $end
$upscope $end
$scope module l3f4 $end
$var wire 1 C( A $end
$var wire 1 D( B $end
$var wire 1 E( Cin $end
$var wire 1 F( Cout $end
$var wire 1 G( S $end
$var wire 1 H( and1 $end
$var wire 1 I( and2 $end
$var wire 1 J( xor1 $end
$upscope $end
$scope module l3f5 $end
$var wire 1 K( A $end
$var wire 1 L( B $end
$var wire 1 M( Cin $end
$var wire 1 N( Cout $end
$var wire 1 O( S $end
$var wire 1 P( and1 $end
$var wire 1 Q( and2 $end
$var wire 1 R( xor1 $end
$upscope $end
$scope module l3f6 $end
$var wire 1 S( A $end
$var wire 1 T( B $end
$var wire 1 U( Cin $end
$var wire 1 V( Cout $end
$var wire 1 W( S $end
$var wire 1 X( and1 $end
$var wire 1 Y( and2 $end
$var wire 1 Z( xor1 $end
$upscope $end
$scope module l4h0 $end
$var wire 1 [( A $end
$var wire 1 \( B $end
$var wire 1 ]( Cout $end
$var wire 1 ^( S $end
$upscope $end
$scope module l4f0 $end
$var wire 1 _( A $end
$var wire 1 `( B $end
$var wire 1 a( Cin $end
$var wire 1 b( Cout $end
$var wire 1 c( S $end
$var wire 1 d( and1 $end
$var wire 1 e( and2 $end
$var wire 1 f( xor1 $end
$upscope $end
$scope module l4f1 $end
$var wire 1 g( A $end
$var wire 1 h( B $end
$var wire 1 i( Cin $end
$var wire 1 j( Cout $end
$var wire 1 k( S $end
$var wire 1 l( and1 $end
$var wire 1 m( and2 $end
$var wire 1 n( xor1 $end
$upscope $end
$scope module l4f2 $end
$var wire 1 o( A $end
$var wire 1 p( B $end
$var wire 1 q( Cin $end
$var wire 1 r( Cout $end
$var wire 1 s( S $end
$var wire 1 t( and1 $end
$var wire 1 u( and2 $end
$var wire 1 v( xor1 $end
$upscope $end
$scope module l4f3 $end
$var wire 1 w( A $end
$var wire 1 x( B $end
$var wire 1 y( Cin $end
$var wire 1 z( Cout $end
$var wire 1 {( S $end
$var wire 1 |( and1 $end
$var wire 1 }( and2 $end
$var wire 1 ~( xor1 $end
$upscope $end
$scope module l4f4 $end
$var wire 1 !) A $end
$var wire 1 ") B $end
$var wire 1 #) Cin $end
$var wire 1 $) Cout $end
$var wire 1 %) S $end
$var wire 1 &) and1 $end
$var wire 1 ') and2 $end
$var wire 1 () xor1 $end
$upscope $end
$scope module l4f5 $end
$var wire 1 )) A $end
$var wire 1 *) B $end
$var wire 1 +) Cin $end
$var wire 1 ,) Cout $end
$var wire 1 -) S $end
$var wire 1 .) and1 $end
$var wire 1 /) and2 $end
$var wire 1 0) xor1 $end
$upscope $end
$scope module l4f6 $end
$var wire 1 1) A $end
$var wire 1 2) B $end
$var wire 1 3) Cin $end
$var wire 1 4) Cout $end
$var wire 1 5) S $end
$var wire 1 6) and1 $end
$var wire 1 7) and2 $end
$var wire 1 8) xor1 $end
$upscope $end
$scope module l5h0 $end
$var wire 1 9) A $end
$var wire 1 :) B $end
$var wire 1 ;) Cout $end
$var wire 1 <) S $end
$upscope $end
$scope module l5f0 $end
$var wire 1 =) A $end
$var wire 1 >) B $end
$var wire 1 ?) Cin $end
$var wire 1 @) Cout $end
$var wire 1 A) S $end
$var wire 1 B) and1 $end
$var wire 1 C) and2 $end
$var wire 1 D) xor1 $end
$upscope $end
$scope module l5f1 $end
$var wire 1 E) A $end
$var wire 1 F) B $end
$var wire 1 G) Cin $end
$var wire 1 H) Cout $end
$var wire 1 I) S $end
$var wire 1 J) and1 $end
$var wire 1 K) and2 $end
$var wire 1 L) xor1 $end
$upscope $end
$scope module l5f2 $end
$var wire 1 M) A $end
$var wire 1 N) B $end
$var wire 1 O) Cin $end
$var wire 1 P) Cout $end
$var wire 1 Q) S $end
$var wire 1 R) and1 $end
$var wire 1 S) and2 $end
$var wire 1 T) xor1 $end
$upscope $end
$scope module l5f3 $end
$var wire 1 U) A $end
$var wire 1 V) B $end
$var wire 1 W) Cin $end
$var wire 1 X) Cout $end
$var wire 1 Y) S $end
$var wire 1 Z) and1 $end
$var wire 1 [) and2 $end
$var wire 1 \) xor1 $end
$upscope $end
$scope module l5f4 $end
$var wire 1 ]) A $end
$var wire 1 ^) B $end
$var wire 1 _) Cin $end
$var wire 1 `) Cout $end
$var wire 1 a) S $end
$var wire 1 b) and1 $end
$var wire 1 c) and2 $end
$var wire 1 d) xor1 $end
$upscope $end
$scope module l5f5 $end
$var wire 1 e) A $end
$var wire 1 f) B $end
$var wire 1 g) Cin $end
$var wire 1 h) Cout $end
$var wire 1 i) S $end
$var wire 1 j) and1 $end
$var wire 1 k) and2 $end
$var wire 1 l) xor1 $end
$upscope $end
$scope module l5f6 $end
$var wire 1 m) A $end
$var wire 1 n) B $end
$var wire 1 o) Cin $end
$var wire 1 p) Cout $end
$var wire 1 q) S $end
$var wire 1 r) and1 $end
$var wire 1 s) and2 $end
$var wire 1 t) xor1 $end
$upscope $end
$scope module l6h0 $end
$var wire 1 u) A $end
$var wire 1 v) B $end
$var wire 1 w) Cout $end
$var wire 1 x) S $end
$upscope $end
$scope module l6f0 $end
$var wire 1 y) A $end
$var wire 1 z) B $end
$var wire 1 {) Cin $end
$var wire 1 |) Cout $end
$var wire 1 }) S $end
$var wire 1 ~) and1 $end
$var wire 1 !* and2 $end
$var wire 1 "* xor1 $end
$upscope $end
$scope module l6f1 $end
$var wire 1 #* A $end
$var wire 1 $* B $end
$var wire 1 %* Cin $end
$var wire 1 &* Cout $end
$var wire 1 '* S $end
$var wire 1 (* and1 $end
$var wire 1 )* and2 $end
$var wire 1 ** xor1 $end
$upscope $end
$scope module l6f2 $end
$var wire 1 +* A $end
$var wire 1 ,* B $end
$var wire 1 -* Cin $end
$var wire 1 .* Cout $end
$var wire 1 /* S $end
$var wire 1 0* and1 $end
$var wire 1 1* and2 $end
$var wire 1 2* xor1 $end
$upscope $end
$scope module l6f3 $end
$var wire 1 3* A $end
$var wire 1 4* B $end
$var wire 1 5* Cin $end
$var wire 1 6* Cout $end
$var wire 1 7* S $end
$var wire 1 8* and1 $end
$var wire 1 9* and2 $end
$var wire 1 :* xor1 $end
$upscope $end
$scope module l6f4 $end
$var wire 1 ;* A $end
$var wire 1 <* B $end
$var wire 1 =* Cin $end
$var wire 1 >* Cout $end
$var wire 1 ?* S $end
$var wire 1 @* and1 $end
$var wire 1 A* and2 $end
$var wire 1 B* xor1 $end
$upscope $end
$scope module l6f5 $end
$var wire 1 C* A $end
$var wire 1 D* B $end
$var wire 1 E* Cin $end
$var wire 1 F* Cout $end
$var wire 1 G* S $end
$var wire 1 H* and1 $end
$var wire 1 I* and2 $end
$var wire 1 J* xor1 $end
$upscope $end
$scope module l6f6 $end
$var wire 1 K* A $end
$var wire 1 L* B $end
$var wire 1 M* Cin $end
$var wire 1 N* Cout $end
$var wire 1 O* S $end
$var wire 1 P* and1 $end
$var wire 1 Q* and2 $end
$var wire 1 R* xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
